{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DVC-PROJECT-TEMPLATE DVC Project Template STEPS - STEP 01 - Create a repository by using template repository STEP 02 - Clone the new repository STEP 03 - Create a conda environment after opening the repository in VS Code '''bash conda create --prefix ./env python=3.8 -y ''' '''bash conda ctivate ./env ''' OR '''bash source activate ./env ''' STEP 04 - Install the requirements '''bash pip install requirements.txt ''' STEP 05 - Initialize the DVC project \"\"\"bash dvc init ''' STEP 06 - commit and push the changes to the remote repository","title":"Home"},{"location":"#dvc-project-template","text":"DVC Project Template","title":"DVC-PROJECT-TEMPLATE"},{"location":"#steps-","text":"","title":"STEPS -"},{"location":"#step-01-create-a-repository-by-using-template-repository","text":"","title":"STEP 01 - Create a repository by using template repository"},{"location":"#step-02-clone-the-new-repository","text":"","title":"STEP 02 - Clone the new repository"},{"location":"#step-03-create-a-conda-environment-after-opening-the-repository-in-vs-code","text":"'''bash conda create --prefix ./env python=3.8 -y ''' '''bash conda ctivate ./env ''' OR '''bash source activate ./env '''","title":"STEP 03 - Create a conda environment after opening the repository in VS Code"},{"location":"#step-04-install-the-requirements","text":"'''bash pip install requirements.txt '''","title":"STEP 04 - Install the requirements"},{"location":"#step-05-initialize-the-dvc-project","text":"\"\"\"bash dvc init '''","title":"STEP 05 - Initialize the DVC project"},{"location":"#step-06-commit-and-push-the-changes-to-the-remote-repository","text":"","title":"STEP 06 - commit and push the changes to the remote repository"},{"location":"data_prep/","text":"# Data preparation stage - Data preparation stageConvert my datat into train and test.tsv in 70:30 ratio '''' data.xml -train.tsv -test.csv ''' We are chosing only three tags in the xml data - 1. row_id,2. title and body and 3.tags (Stackoverflow tags psecific to python) Tags Features Names row Id row ID title and body text stackoverflow tags Label-Python","title":"Data-prep-stage"},{"location":"featurization/","text":"featurization stage from sklearn.featur_extraction import CountVectorizer max_features = 4 ngrams = 2 vectorizer = CountVectorizer ( max_features - max_features , ngrams_range = ( 1 , ngrams )) x = vectorizer . fit_transform ( corpus ) print ( x . toarray ()) print ( vectorizer . get_feature_names_out ())","title":"Featurization"},{"location":"featurization/#featurization-stage","text":"from sklearn.featur_extraction import CountVectorizer max_features = 4 ngrams = 2 vectorizer = CountVectorizer ( max_features - max_features , ngrams_range = ( 1 , ngrams )) x = vectorizer . fit_transform ( corpus ) print ( x . toarray ()) print ( vectorizer . get_feature_names_out ())","title":"featurization stage"}]}